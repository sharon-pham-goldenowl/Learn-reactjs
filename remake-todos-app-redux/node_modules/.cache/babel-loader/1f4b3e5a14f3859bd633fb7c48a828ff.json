{"ast":null,"code":"var _jsxFileName = \"/home/sharon/myspace/Learn-reactjs/remake-todos-app-redux/src/components/TodoList/index.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport TodoItem from \"../TodoItem\";\nimport \"./index.css\";\n\nclass TodoList extends Component {\n  render() {\n    const {\n      todos,\n      onDeleteTodo,\n      onUpdateTodo\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-list-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, todos.map(todo => /*#__PURE__*/React.createElement(TodoItem, {\n      key: todo.id,\n      data: todo,\n      onDeleteTodo: () => onDeleteTodo(todo.id),\n      onUpdateTodo: attributes => onUpdateTodo(todo.id, attributes),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    })), todos.length === 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"no-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 32\n      }\n    }, \"No todos\"));\n  }\n\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    content: PropTypes.string,\n    completed: PropTypes.bool,\n    createdAt: PropTypes.number,\n    updatedAt: PropTypes.number\n  })),\n  onDeleteTodo: PropTypes.func,\n  onUpdateTodo: PropTypes.func\n};\nexport default TodoList;","map":{"version":3,"sources":["/home/sharon/myspace/Learn-reactjs/remake-todos-app-redux/src/components/TodoList/index.js"],"names":["React","Component","PropTypes","TodoItem","TodoList","render","todos","onDeleteTodo","onUpdateTodo","props","map","todo","id","attributes","length","propTypes","arrayOf","shape","string","content","completed","bool","createdAt","number","updatedAt","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,QAAP,MAAqB,aAArB;AAEA,OAAO,aAAP;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC/BI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,YAAT;AAAuBC,MAAAA;AAAvB,QAAwC,KAAKC,KAAnD;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,KAAK,CAACI,GAAN,CAAWC,IAAD,iBACT,oBAAC,QAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,MAAA,IAAI,EAAED,IAFR;AAGE,MAAA,YAAY,EAAE,MAAMJ,YAAY,CAACI,IAAI,CAACC,EAAN,CAHlC;AAIE,MAAA,YAAY,EAAGC,UAAD,IAAgBL,YAAY,CAACG,IAAI,CAACC,EAAN,EAAUC,UAAV,CAJ5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,EASGP,KAAK,CAACQ,MAAN,KAAiB,CAAjB,iBAAsB;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATzB,CADF;AAaD;;AAjB8B;;AAoBjCV,QAAQ,CAACW,SAAT,GAAqB;AACnBT,EAAAA,KAAK,EAAEJ,SAAS,CAACc,OAAV,CACLd,SAAS,CAACe,KAAV,CAAgB;AACdL,IAAAA,EAAE,EAAEV,SAAS,CAACgB,MADA;AAEdC,IAAAA,OAAO,EAAEjB,SAAS,CAACgB,MAFL;AAGdE,IAAAA,SAAS,EAAElB,SAAS,CAACmB,IAHP;AAIdC,IAAAA,SAAS,EAAEpB,SAAS,CAACqB,MAJP;AAKdC,IAAAA,SAAS,EAAEtB,SAAS,CAACqB;AALP,GAAhB,CADK,CADY;AAUnBhB,EAAAA,YAAY,EAAEL,SAAS,CAACuB,IAVL;AAWnBjB,EAAAA,YAAY,EAAEN,SAAS,CAACuB;AAXL,CAArB;AAcA,eAAerB,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport TodoItem from \"../TodoItem\";\n\nimport \"./index.css\";\n\nclass TodoList extends Component {\n  render() {\n    const { todos, onDeleteTodo, onUpdateTodo } = this.props;\n\n    return (\n      <div className=\"todo-list-container\">\n        {todos.map((todo) => (\n          <TodoItem\n            key={todo.id}\n            data={todo}\n            onDeleteTodo={() => onDeleteTodo(todo.id)}\n            onUpdateTodo={(attributes) => onUpdateTodo(todo.id, attributes)}\n          />\n        ))}\n        {todos.length === 0 && <div className=\"no-data\">No todos</div>}\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      content: PropTypes.string,\n      completed: PropTypes.bool,\n      createdAt: PropTypes.number,\n      updatedAt: PropTypes.number,\n    })\n  ),\n  onDeleteTodo: PropTypes.func,\n  onUpdateTodo: PropTypes.func,\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}