{"ast":null,"code":"var _jsxFileName = \"/home/sharon/myspace/learn-reactjs/remake-todos-app-redux/src/components/TodoItem/index.js\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./index.css\";\nimport greenTickIcon from \"../../assets/images/green-tick.svg\";\nimport blackTickIcon from \"../../assets/images/black-tick.svg\";\nimport editIcon from \"../../assets/images/edit.svg\";\nimport deleteIcon from \"../../assets/images/delete.svg\";\nimport checkIcon from \"../../assets/images/check.svg\";\n\nclass TodoItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToggle = e => {\n      e.preventDefault();\n      const {\n        onUpdateTodo,\n        data: {\n          completed\n        }\n      } = this.props;\n      onUpdateTodo({\n        completed: !completed\n      });\n    };\n\n    this.handleDelete = e => {\n      e.preventDefault();\n      const {\n        onDeleteTodo\n      } = this.props;\n      onDeleteTodo();\n    };\n\n    this.toogleEditMode = e => {\n      e.preventDefault();\n      const {\n        editMode\n      } = this.state;\n      this.setState({\n        editMode: !editMode\n      });\n    };\n\n    this.handleChangeEditContent = e => {\n      this.setState({\n        editContent: e.target.value\n      });\n    };\n\n    this.handleSaveTodo = () => {\n      const {\n        onUpdateTodo\n      } = this.props;\n      const {\n        editContent\n      } = this.state;\n      this.setState({\n        editMode: false\n      });\n      onUpdateTodo({\n        content: editContent\n      });\n    };\n\n    this.state = {\n      editContent: \"\",\n      editMode: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const {\n      data: {\n        content,\n        updatedAt\n      }\n    } = props;\n\n    if (state.previousUpdatedAt !== updatedAt) {\n      return {\n        editContent: content,\n        previousUpdatedAt: updatedAt\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      data: {\n        content,\n        completed\n      }\n    } = this.props;\n    const {\n      editContent,\n      editMode\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-item-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      className: \"todo-item-toggle\",\n      onClick: this.handleToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, completed && /*#__PURE__*/React.createElement(\"img\", {\n      src: greenTickIcon,\n      alt: \"tick\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }), !completed && /*#__PURE__*/React.createElement(\"img\", {\n      src: blackTickIcon,\n      alt: \"tick\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 26\n      }\n    })), !editMode && /*#__PURE__*/React.createElement(\"div\", {\n      className: `todo-item-content ${completed ? \"completed\" : \"incompleted\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, content), editMode && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-item-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSaveTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Todo content\",\n      onChange: this.handleChangeEditContent,\n      value: editContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `todo-item-options ${editMode ? \"edit\" : \"view\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, editMode && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      className: \"icon-btn\",\n      onClick: this.handleSaveTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: checkIcon,\n      alt: \"complete-edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      className: \"icon-btn\",\n      onClick: this.toogleEditMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: deleteIcon,\n      alt: \"close-edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }))), !editMode && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      className: \"icon-btn\",\n      onClick: this.toogleEditMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: editIcon,\n      alt: \"edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      className: \"icon-btn\",\n      onClick: this.handleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: deleteIcon,\n      alt: \"delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nTodoItem.propTypes = {\n  data: PropTypes.shape({\n    id: PropTypes.string,\n    content: PropTypes.string,\n    completed: PropTypes.bool,\n    createdAt: PropTypes.number,\n    updatedAt: PropTypes.number\n  }),\n  onDeleteTodo: PropTypes.func,\n  onUpdateTodo: PropTypes.func\n};\nexport default TodoItem;","map":{"version":3,"sources":["/home/sharon/myspace/learn-reactjs/remake-todos-app-redux/src/components/TodoItem/index.js"],"names":["React","Component","PropTypes","TodoItem","constructor","props","handleToggle","e","preventDefault","onUpdateTodo","data","completed","handleDelete","onDeleteTodo","toogleEditMode","editMode","state","setState","handleChangeEditContent","editContent","target","value","handleSaveTodo","content","getDerivedStateFromProps","updatedAt","previousUpdatedAt","render","greenTickIcon","blackTickIcon","checkIcon","deleteIcon","editIcon","propTypes","shape","id","string","bool","createdAt","number","func"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./index.css\";\n\nimport greenTickIcon from \"../../assets/images/green-tick.svg\";\nimport blackTickIcon from \"../../assets/images/black-tick.svg\";\nimport editIcon from \"../../assets/images/edit.svg\";\nimport deleteIcon from \"../../assets/images/delete.svg\";\nimport checkIcon from \"../../assets/images/check.svg\";\n\nclass TodoItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editContent: \"\",\n      editMode: false,\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const {\n      data: { content, updatedAt },\n    } = props;\n\n    if (state.previousUpdatedAt !== updatedAt) {\n      return {\n        editContent: content,\n        previousUpdatedAt: updatedAt,\n      };\n    }\n\n    return null;\n  }\n\n  handleToggle = (e) => {\n    e.preventDefault();\n\n    const {\n      onUpdateTodo,\n      data: { completed },\n    } = this.props;\n    onUpdateTodo({ completed: !completed });\n  };\n\n  handleDelete = (e) => {\n    e.preventDefault();\n\n    const { onDeleteTodo } = this.props;\n    onDeleteTodo();\n  };\n\n  toogleEditMode = (e) => {\n    e.preventDefault();\n\n    const { editMode } = this.state;\n    this.setState({ editMode: !editMode });\n  };\n\n  handleChangeEditContent = (e) => {\n    this.setState({ editContent: e.target.value });\n  };\n\n  handleSaveTodo = () => {\n    const { onUpdateTodo } = this.props;\n    const { editContent } = this.state;\n\n    this.setState({\n      editMode: false,\n    });\n\n    onUpdateTodo({ content: editContent });\n  };\n\n  render() {\n    const {\n      data: { content, completed },\n    } = this.props;\n    const { editContent, editMode } = this.state;\n\n    return (\n      <div className=\"todo-item-container\">\n        <a href=\"#\" className=\"todo-item-toggle\" onClick={this.handleToggle}>\n          {completed && <img src={greenTickIcon} alt=\"tick\" />}\n          {!completed && <img src={blackTickIcon} alt=\"tick\" />}\n        </a>\n        {!editMode && (\n          <div\n            className={`todo-item-content ${\n              completed ? \"completed\" : \"incompleted\"\n            }`}\n          >\n            {content}\n          </div>\n        )}\n        {editMode && (\n          <div className=\"todo-item-content\">\n            <form onSubmit={this.handleSaveTodo}>\n              <input\n                type=\"text\"\n                placeholder=\"Todo content\"\n                onChange={this.handleChangeEditContent}\n                value={editContent}\n              />\n            </form>\n          </div>\n        )}\n        <div className={`todo-item-options ${editMode ? \"edit\" : \"view\"}`}>\n          {editMode && (\n            <>\n              <a href=\"#\" className=\"icon-btn\" onClick={this.handleSaveTodo}>\n                <img src={checkIcon} alt=\"complete-edit\" />\n              </a>\n              <a href=\"#\" className=\"icon-btn\" onClick={this.toogleEditMode}>\n                <img src={deleteIcon} alt=\"close-edit\" />\n              </a>\n            </>\n          )}\n          {!editMode && (\n            <>\n              <a href=\"#\" className=\"icon-btn\" onClick={this.toogleEditMode}>\n                <img src={editIcon} alt=\"edit\" />\n              </a>\n              <a href=\"#\" className=\"icon-btn\" onClick={this.handleDelete}>\n                <img src={deleteIcon} alt=\"delete\" />\n              </a>\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  data: PropTypes.shape({\n    id: PropTypes.string,\n    content: PropTypes.string,\n    completed: PropTypes.bool,\n    createdAt: PropTypes.number,\n    updatedAt: PropTypes.number,\n  }),\n  onDeleteTodo: PropTypes.func,\n  onUpdateTodo: PropTypes.func,\n};\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}