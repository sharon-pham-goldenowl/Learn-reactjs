{"ast":null,"code":"var _jsxFileName = \"/home/sharon/myspace/Learn-reactjs/remake-todos-app-redux/src/components/TodoForm/index.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./index.css\";\n\nclass TodoForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeContent = e => {\n      this.setState({\n        content: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        onCreateTodo\n      } = this.props;\n      const {\n        content\n      } = this.state;\n\n      if (!content) {\n        return;\n      }\n\n      onCreateTodo(content);\n      this.clearContent();\n    };\n\n    this.clearContent = () => {\n      this.setState({\n        content: \"\"\n      });\n    };\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  render() {\n    const {\n      content\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"What need to be done?\",\n      onChange: this.handleChangeContent,\n      value: content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nTodoForm.propTypes = {\n  onCreateTodo: PropTypes.func\n};\nexport default TodoForm;","map":{"version":3,"sources":["/home/sharon/myspace/Learn-reactjs/remake-todos-app-redux/src/components/TodoForm/index.js"],"names":["React","Component","PropTypes","TodoForm","constructor","props","handleChangeContent","e","setState","content","target","value","handleSubmit","preventDefault","onCreateTodo","state","clearContent","render","propTypes","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,aAAP;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,mBARmB,GAQIC,CAAD,IAAO;AAC3B,WAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAEF,CAAC,CAACG,MAAF,CAASC;AADN,OAAd;AAGD,KAZkB;;AAAA,SAcnBC,YAdmB,GAcHL,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACM,cAAF;AAEA,YAAM;AAAEC,QAAAA;AAAF,UAAmB,KAAKT,KAA9B;AACA,YAAM;AAAEI,QAAAA;AAAF,UAAc,KAAKM,KAAzB;;AAEA,UAAI,CAACN,OAAL,EAAc;AACZ;AACD;;AAEDK,MAAAA,YAAY,CAACL,OAAD,CAAZ;AACA,WAAKO,YAAL;AACD,KA1BkB;;AAAA,SA4BnBA,YA5BmB,GA4BJ,MAAM;AACnB,WAAKR,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAhCkB;;AAGjB,SAAKM,KAAL,GAAa;AACXN,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AA4BDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA;AAAF,QAAc,KAAKM,KAAzB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,QAAQ,EAAE,KAAKH,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,uBAFd;AAGE,MAAA,QAAQ,EAAE,KAAKN,mBAHjB;AAIE,MAAA,KAAK,EAAEG,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAYD;;AAlD8B;;AAqDjCN,QAAQ,CAACe,SAAT,GAAqB;AACnBJ,EAAAA,YAAY,EAAEZ,SAAS,CAACiB;AADL,CAArB;AAIA,eAAehB,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./index.css\";\n\nclass TodoForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\",\n    };\n  }\n\n  handleChangeContent = (e) => {\n    this.setState({\n      content: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { onCreateTodo } = this.props;\n    const { content } = this.state;\n\n    if (!content) {\n      return;\n    }\n\n    onCreateTodo(content);\n    this.clearContent();\n  };\n\n  clearContent = () => {\n    this.setState({\n      content: \"\",\n    });\n  };\n\n  render() {\n    const { content } = this.state;\n\n    return (\n      <div className=\"todo-form-container\">\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"What need to be done?\"\n            onChange={this.handleChangeContent}\n            value={content}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nTodoForm.propTypes = {\n  onCreateTodo: PropTypes.func,\n};\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}